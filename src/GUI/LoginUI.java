/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Code.Details;
import Code.FileCheck;
import Code.Global;
import Code.Security;
import Testing.TestLogUI;
import Reset.ResetInformation;
import Notifications.RecoveryInfo;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Reece
 */
public class LoginUI extends javax.swing.JFrame {

    Global setting = new Global();
    boolean open;
    FileCheck file = new FileCheck();
    private int counter = 0;

    /**
     * Creates new form UI
     */
    public LoginUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnLogin = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        btnOpen = new javax.swing.JButton();
        btnAdmin = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        lblInstruction = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Casino Admin - Authentication");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        btnLogin.setText("Login");
        btnLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        btnLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnLoginKeyPressed(evt);
            }
        });

        lblStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Loading-gif.gif"))); // NOI18N
        lblStatus.setText("Waiting for Authentication...");
        lblStatus.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Error.gif"))); // NOI18N

        btnOpen.setText("Open");
        btnOpen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnOpen.setEnabled(false);
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        btnAdmin.setText("Admin");
        btnAdmin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdmin.setEnabled(false);
        btnAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        lblInstruction.setText("Plug in USB Key...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnLogin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAdmin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnOpen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)))
                    .addComponent(lblInstruction)
                    .addComponent(lblStatus))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblInstruction)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogin)
                    .addComponent(btnOpen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdmin)
                    .addComponent(btnReset))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        try {
            lblStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Processing.gif")));
            lblStatus.setText("Checking for updates");
            btnLogin.setEnabled(false);
            start(this);
        } catch (Exception ignore) {
            setting.displayMessage(6, "Error");
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void start(JFrame mw) {
        Thread go = new Thread() {
            @Override
            public void run() {
                lblStatus.setEnabled(true);
                lblInstruction.setText("Reading Key Data...");
                Details con = new Details();
                Code.Update update = new Code.Update();
                boolean success = con.validateURL("accessremote.uk");
                if (!success) {
                    setting.displayMessage(3, "Error");
                    lblInstruction.setText("Can't Connect...");
                } else {

                    try {
                        if (update.check()) {
                            lblStatus.setText("Update is available!");
                            lblStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Complete.gif")));
                            update.available(mw);
                        } else {
                            open = file.getFile();
                            Security sec = new Security();
                            if (open == true) {
                                btnLogin.setEnabled(false);
                                lblStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Complete.gif")));
                                lblStatus.setText("Key Accepted, ready for command.");
                                lblInstruction.setText("Press Open or Admin to begin!");
                                lblStatus.setEnabled(true);
                                sec.saveLog("A USB key was accepted and a user was granted login access.");
                                counter = 0;
                                btnOpen.setEnabled(true);
                                btnAdmin.setEnabled(true);
                                btnReset.setEnabled(false);
                            } else {
                                lblStatus.setText("Invalid User.");
                                lblStatus.setEnabled(false);
                                lblInstruction.setText("Insert Correct USB to location F");
                                sec.saveLog("Warning: A USB Key was not recognised. This could be an attempted breach of the system.");
                                btnOpen.setEnabled(false);
                                btnAdmin.setEnabled(false);
                                btnLogin.setEnabled(true);
                                counter++;
                                if (counter >= 2) {
                                    btnReset.setEnabled(false);
                                } else {
                                    btnReset.setEnabled(true);
                                }
                            }
                        }
                    } catch (Exception ignore) {
                        setting.displayMessage(0, "Error");
                        System.out.println(ignore);
                    }
                }
            }
        };
        Thread testing = new Thread() {
            @Override
            public void start() {

                Security sec = new Security();
                open = true;
                if (open == true) {
                    btnLogin.setEnabled(false);
                    lblStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Complete.gif")));
                    lblStatus.setText("Test mode activated");
                    lblInstruction.setText("Press Open or Admin to begin!");
                    lblStatus.setEnabled(true);
                    sec.saveLog("Test mode is active, key not required.");
                    counter = 0;
                    btnOpen.setEnabled(true);
                    btnAdmin.setEnabled(true);
                    btnReset.setEnabled(false);
                }
            }
        };
        go.start();
        //testing.start();
    }

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        new StandardUI().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnOpenActionPerformed

    private void btnAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminActionPerformed
        new AdminPassw("login").setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAdminActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        if (Global.reset == false) {
            new ResetInformation().setVisible(true);
            this.dispose();
        } else {
            setting.displayMessage(1, "Warn");
        }
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnLoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnLoginKeyPressed
        if (String.valueOf(evt.getKeyChar()).equals("A")) {
            if (Global.test) {
                new TestLogUI().setVisible(true);
                this.dispose();
            } else {
                setting.displayMessage(1, "Warn");
            }
        }
    }//GEN-LAST:event_btnLoginKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        FileCheck file2 = new FileCheck();
        Security key = new Security();
        Code.Update old = new Code.Update();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(
                new Runnable() {
            boolean create = file2.mkDir();

            public void run() {
                old.remOld();

                if (create) {
                    try {
                        key.genKey();
                    } catch (Exception e) {

                    }
                    new FirstTime().setVisible(true);
                    key.saveLog("First time setup initiated. The recovery key was diaplayed and encrypted.");
                    new RecoveryInfo().setVisible(true);

                } else {
                    new LoginUI().setVisible(true);
                }
            }
        }
        );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdmin;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel lblInstruction;
    private javax.swing.JLabel lblStatus;
    // End of variables declaration//GEN-END:variables
}
